/*
 * This file is generated by jOOQ.
*/
package models.jooq.tables.records


import java.lang.Integer
import java.lang.String
import java.time.LocalDateTime

import javax.annotation.Generated

import models.jooq.tables.TmUser

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record9
import org.jooq.Row9
import org.jooq.impl.UpdatableRecordImpl

import scala.Array


/**
 * This class is generated by jOOQ.
 */
@Generated(
  value = Array(
    "http://www.jooq.org",
    "jOOQ version:3.9.1"
  ),
  comments = "This class is generated by jOOQ"
)
class TmUserRecord extends UpdatableRecordImpl[TmUserRecord](TmUser.TM_USER) with Record9[Integer, String, String, String, String, String, String, LocalDateTime, LocalDateTime] {

  /**
   * Setter for <code>workentry_schema.tm_user.id</code>.
   */
  def setId(value : Integer) : Unit = {
    set(0, value)
  }

  /**
   * Getter for <code>workentry_schema.tm_user.id</code>.
   */
  def getId : Integer = {
    val r = get(0)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  /**
   * Setter for <code>workentry_schema.tm_user.name</code>.
   */
  def setName(value : String) : Unit = {
    set(1, value)
  }

  /**
   * Getter for <code>workentry_schema.tm_user.name</code>.
   */
  def getName : String = {
    val r = get(1)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>workentry_schema.tm_user.email</code>.
   */
  def setEmail(value : String) : Unit = {
    set(2, value)
  }

  /**
   * Getter for <code>workentry_schema.tm_user.email</code>.
   */
  def getEmail : String = {
    val r = get(2)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>workentry_schema.tm_user.nif</code>.
   */
  def setNif(value : String) : Unit = {
    set(3, value)
  }

  /**
   * Getter for <code>workentry_schema.tm_user.nif</code>.
   */
  def getNif : String = {
    val r = get(3)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>workentry_schema.tm_user.afiliation_no</code>.
   */
  def setAfiliationNo(value : String) : Unit = {
    set(4, value)
  }

  /**
   * Getter for <code>workentry_schema.tm_user.afiliation_no</code>.
   */
  def getAfiliationNo : String = {
    val r = get(4)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>workentry_schema.tm_user.login_name</code>.
   */
  def setLoginName(value : String) : Unit = {
    set(5, value)
  }

  /**
   * Getter for <code>workentry_schema.tm_user.login_name</code>.
   */
  def getLoginName : String = {
    val r = get(5)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>workentry_schema.tm_user.password</code>.
   */
  def setPassword(value : String) : Unit = {
    set(6, value)
  }

  /**
   * Getter for <code>workentry_schema.tm_user.password</code>.
   */
  def getPassword : String = {
    val r = get(6)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>workentry_schema.tm_user.created</code>.
   */
  def setCreated(value : LocalDateTime) : Unit = {
    set(7, value)
  }

  /**
   * Getter for <code>workentry_schema.tm_user.created</code>.
   */
  def getCreated : LocalDateTime = {
    val r = get(7)
    if (r == null) null else r.asInstanceOf[LocalDateTime]
  }

  /**
   * Setter for <code>workentry_schema.tm_user.modified</code>.
   */
  def setModified(value : LocalDateTime) : Unit = {
    set(8, value)
  }

  /**
   * Getter for <code>workentry_schema.tm_user.modified</code>.
   */
  def getModified : LocalDateTime = {
    val r = get(8)
    if (r == null) null else r.asInstanceOf[LocalDateTime]
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------
  override def key : Record1[Integer] = {
    return super.key.asInstanceOf[ Record1[Integer] ]
  }

  // -------------------------------------------------------------------------
  // Record9 type implementation
  // -------------------------------------------------------------------------

  override def fieldsRow : Row9[Integer, String, String, String, String, String, String, LocalDateTime, LocalDateTime] = {
    super.fieldsRow.asInstanceOf[ Row9[Integer, String, String, String, String, String, String, LocalDateTime, LocalDateTime] ]
  }

  override def valuesRow : Row9[Integer, String, String, String, String, String, String, LocalDateTime, LocalDateTime] = {
    super.valuesRow.asInstanceOf[ Row9[Integer, String, String, String, String, String, String, LocalDateTime, LocalDateTime] ]
  }
  override def field1 : Field[Integer] = TmUser.TM_USER.ID
  override def field2 : Field[String] = TmUser.TM_USER.NAME
  override def field3 : Field[String] = TmUser.TM_USER.EMAIL
  override def field4 : Field[String] = TmUser.TM_USER.NIF
  override def field5 : Field[String] = TmUser.TM_USER.AFILIATION_NO
  override def field6 : Field[String] = TmUser.TM_USER.LOGIN_NAME
  override def field7 : Field[String] = TmUser.TM_USER.PASSWORD
  override def field8 : Field[LocalDateTime] = TmUser.TM_USER.CREATED
  override def field9 : Field[LocalDateTime] = TmUser.TM_USER.MODIFIED
  override def value1 : Integer = getId
  override def value2 : String = getName
  override def value3 : String = getEmail
  override def value4 : String = getNif
  override def value5 : String = getAfiliationNo
  override def value6 : String = getLoginName
  override def value7 : String = getPassword
  override def value8 : LocalDateTime = getCreated
  override def value9 : LocalDateTime = getModified

  override def value1(value : Integer) : TmUserRecord = {
    setId(value)
    this
  }

  override def value2(value : String) : TmUserRecord = {
    setName(value)
    this
  }

  override def value3(value : String) : TmUserRecord = {
    setEmail(value)
    this
  }

  override def value4(value : String) : TmUserRecord = {
    setNif(value)
    this
  }

  override def value5(value : String) : TmUserRecord = {
    setAfiliationNo(value)
    this
  }

  override def value6(value : String) : TmUserRecord = {
    setLoginName(value)
    this
  }

  override def value7(value : String) : TmUserRecord = {
    setPassword(value)
    this
  }

  override def value8(value : LocalDateTime) : TmUserRecord = {
    setCreated(value)
    this
  }

  override def value9(value : LocalDateTime) : TmUserRecord = {
    setModified(value)
    this
  }

  override def values(value1 : Integer, value2 : String, value3 : String, value4 : String, value5 : String, value6 : String, value7 : String, value8 : LocalDateTime, value9 : LocalDateTime) : TmUserRecord = {
    this.value1(value1)
    this.value2(value2)
    this.value3(value3)
    this.value4(value4)
    this.value5(value5)
    this.value6(value6)
    this.value7(value7)
    this.value8(value8)
    this.value9(value9)
    this
  }

  /**
   * Create a detached, initialised TmUserRecord
   */
  def this(id : Integer, name : String, email : String, nif : String, afiliationNo : String, loginName : String, password : String, created : LocalDateTime, modified : LocalDateTime) = {
    this()

    set(0, id)
    set(1, name)
    set(2, email)
    set(3, nif)
    set(4, afiliationNo)
    set(5, loginName)
    set(6, password)
    set(7, created)
    set(8, modified)
  }
}
