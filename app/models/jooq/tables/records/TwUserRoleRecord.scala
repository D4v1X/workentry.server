/*
 * This file is generated by jOOQ.
*/
package models.jooq.tables.records


import java.lang.Integer
import java.time.LocalDateTime

import javax.annotation.Generated

import models.jooq.tables.TwUserRole

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record5
import org.jooq.Row5
import org.jooq.impl.UpdatableRecordImpl

import scala.Array


/**
 * This class is generated by jOOQ.
 */
@Generated(
  value = Array(
    "http://www.jooq.org",
    "jOOQ version:3.9.1"
  ),
  comments = "This class is generated by jOOQ"
)
class TwUserRoleRecord extends UpdatableRecordImpl[TwUserRoleRecord](TwUserRole.TW_USER_ROLE) with Record5[Integer, Integer, Integer, LocalDateTime, LocalDateTime] {

  /**
   * Setter for <code>workentry_schema.tw_user_role.id</code>.
   */
  def setId(value : Integer) : Unit = {
    set(0, value)
  }

  /**
   * Getter for <code>workentry_schema.tw_user_role.id</code>.
   */
  def getId : Integer = {
    val r = get(0)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  /**
   * Setter for <code>workentry_schema.tw_user_role.user_id</code>.
   */
  def setUserId(value : Integer) : Unit = {
    set(1, value)
  }

  /**
   * Getter for <code>workentry_schema.tw_user_role.user_id</code>.
   */
  def getUserId : Integer = {
    val r = get(1)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  /**
   * Setter for <code>workentry_schema.tw_user_role.role_id</code>.
   */
  def setRoleId(value : Integer) : Unit = {
    set(2, value)
  }

  /**
   * Getter for <code>workentry_schema.tw_user_role.role_id</code>.
   */
  def getRoleId : Integer = {
    val r = get(2)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  /**
   * Setter for <code>workentry_schema.tw_user_role.created</code>.
   */
  def setCreated(value : LocalDateTime) : Unit = {
    set(3, value)
  }

  /**
   * Getter for <code>workentry_schema.tw_user_role.created</code>.
   */
  def getCreated : LocalDateTime = {
    val r = get(3)
    if (r == null) null else r.asInstanceOf[LocalDateTime]
  }

  /**
   * Setter for <code>workentry_schema.tw_user_role.modified</code>.
   */
  def setModified(value : LocalDateTime) : Unit = {
    set(4, value)
  }

  /**
   * Getter for <code>workentry_schema.tw_user_role.modified</code>.
   */
  def getModified : LocalDateTime = {
    val r = get(4)
    if (r == null) null else r.asInstanceOf[LocalDateTime]
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------
  override def key : Record1[Integer] = {
    return super.key.asInstanceOf[ Record1[Integer] ]
  }

  // -------------------------------------------------------------------------
  // Record5 type implementation
  // -------------------------------------------------------------------------

  override def fieldsRow : Row5[Integer, Integer, Integer, LocalDateTime, LocalDateTime] = {
    super.fieldsRow.asInstanceOf[ Row5[Integer, Integer, Integer, LocalDateTime, LocalDateTime] ]
  }

  override def valuesRow : Row5[Integer, Integer, Integer, LocalDateTime, LocalDateTime] = {
    super.valuesRow.asInstanceOf[ Row5[Integer, Integer, Integer, LocalDateTime, LocalDateTime] ]
  }
  override def field1 : Field[Integer] = TwUserRole.TW_USER_ROLE.ID
  override def field2 : Field[Integer] = TwUserRole.TW_USER_ROLE.USER_ID
  override def field3 : Field[Integer] = TwUserRole.TW_USER_ROLE.ROLE_ID
  override def field4 : Field[LocalDateTime] = TwUserRole.TW_USER_ROLE.CREATED
  override def field5 : Field[LocalDateTime] = TwUserRole.TW_USER_ROLE.MODIFIED
  override def value1 : Integer = getId
  override def value2 : Integer = getUserId
  override def value3 : Integer = getRoleId
  override def value4 : LocalDateTime = getCreated
  override def value5 : LocalDateTime = getModified

  override def value1(value : Integer) : TwUserRoleRecord = {
    setId(value)
    this
  }

  override def value2(value : Integer) : TwUserRoleRecord = {
    setUserId(value)
    this
  }

  override def value3(value : Integer) : TwUserRoleRecord = {
    setRoleId(value)
    this
  }

  override def value4(value : LocalDateTime) : TwUserRoleRecord = {
    setCreated(value)
    this
  }

  override def value5(value : LocalDateTime) : TwUserRoleRecord = {
    setModified(value)
    this
  }

  override def values(value1 : Integer, value2 : Integer, value3 : Integer, value4 : LocalDateTime, value5 : LocalDateTime) : TwUserRoleRecord = {
    this.value1(value1)
    this.value2(value2)
    this.value3(value3)
    this.value4(value4)
    this.value5(value5)
    this
  }

  /**
   * Create a detached, initialised TwUserRoleRecord
   */
  def this(id : Integer, userId : Integer, roleId : Integer, created : LocalDateTime, modified : LocalDateTime) = {
    this()

    set(0, id)
    set(1, userId)
    set(2, roleId)
    set(3, created)
    set(4, modified)
  }
}
